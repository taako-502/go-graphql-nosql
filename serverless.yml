service: staggered-scheduler
org: takao
app: staggered-scheduler

provider:
  name: aws
  region: ap-northeast-1
  runtime: go1.x
  stage: prod
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "dynamodb:*"
          Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/go-graphql-users"

package:
  patterns:
    - "!./**"
    - "./bin/**"

functions:
  handler:
    handler: bin/handler
    events:
      - http:
          path: /query
          method: POST
          cors: true
    environment:
      FRONTEND_HOST: ${param:FRONTEND_HOST}
      GRAPHQL_SERVER_PORT: ${param:GRAPHQL_SERVER_PORT}
      GRAPHQL_SERVER_HOST: ${param:GRAPHQL_SERVER_HOST}
      DOMAIN: ${param:DOMAIN}
      DYNAMO_ENDPOINT: ${param:DYNAMO_ENDPOINT}
      MIGRATION_ENDPOINT: ${param:MIGRATION_ENDPOINT}
      # Lambdaで予約されている環境変数のため、コメントアウト
      # AWS_REGION: ${env:AWS_REGION}
      # AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      # AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      # AWS_SESSION_TOKEN: ${AWS_SESSION_TOKEN}

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    GatewayResponseDefault4XX:
      Type: "AWS::ApiGateway::GatewayResponse"
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: "ApiGatewayRestApi"

outputs:
  FRONTEND_HOST: ${param:FRONTEND_HOST}
  GRAPHQL_SERVER_PORT: ${param:GRAPHQL_SERVER_PORT}
  GRAPHQL_SERVER_HOST: ${param:GRAPHQL_SERVER_HOST}
  DOMAIN: ${param:DOMAIN}
  DYNAMO_ENDPOINT: ${param:DYNAMO_ENDPOINT}
  MIGRATION_ENDPOINT: ${param:MIGRATION_ENDPOINT}
